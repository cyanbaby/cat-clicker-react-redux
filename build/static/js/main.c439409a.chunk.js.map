{"version":3,"sources":["reducers/index.js","actions/index.js","components/list.js","components/output-info.js","components/cat-view.js","components/form.js","App.js","index.js"],"names":["initialState","cats","name","imgUrl","clicks","catIndex","reducer","state","arguments","length","undefined","action","type","Object","objectSpread","map","cat","curCat","idx","data","setCatIndex","connect","props","react_default","a","createElement","className","items","item","key","activeIdx","onClick","dispatch","index","CatView","_props$cat","src","concat","alt","onCatClick","output_info","Form","isFormShow","fields","_this","nextProps","this","setState","resetForm","el","value","parseInt","temp","onSaveForm","_this2","_this$state$fields","toggleForm","style","display","onChange","e","onFieldChange","target","onCancel","onSave","React","Component","App","getCurCat","list","cat_view","updateClicks","components_form","updateCat","mapDispatchToProps","store","createStore","rootReducer","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.c439409a.chunk.js","sourcesContent":["// 初始化的数据\nconst initialState = {\n  cats: [\n    {\n      name: 'Sweet',\n      imgUrl: 'cat_picture1.jpg',\n      clicks: 0\n    }, {\n      name: 'Tough',\n      imgUrl: 'cat_picture2.jpeg',\n      clicks: 0\n    }, {\n      name: 'Yummy',\n      imgUrl: 'cat_picture3.jpeg',\n      clicks: 0\n    }, {\n      name: 'Ghost',\n      imgUrl: 'cat_picture4.jpeg',\n      clicks: 0\n    }, {\n      name: 'Flora',\n      imgUrl: 'cat_picture5.jpeg',\n      clicks: 0\n    }\n  ],\n  catIndex: 0\n};\n\nfunction reducer(state = initialState, action) {\n  switch(action.type) {\n    // 变更猫索引\n    case 'SET_CAT_INDEX':\n      return {\n        ...state,\n        catIndex: action.catIndex\n      }\n\n    // 更新当前猫的点击数\n    case 'UPDATE_CLICKS':\n      return {\n        ...state,\n        cats: state.cats.map(cat => {\n          if (action.curCat === cat) {\n            cat.clicks++\n          }\n\n          return cat\n        })\n      }\n\n    // 更新当前猫的数据\n    case 'UPDATE_CAT':\n      return {\n        ...state,\n        cats: state.cats.map((cat, idx) => idx === state.catIndex ? action.data : cat)\n      }\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n","export const SET_CAT_INDEX = 'SET_CAT_INDEX';\nexport const UPDATE_CLICKS = 'UPDATE_CLICKS';\nexport const UPDATE_CAT = 'UPDATE_CAT';\n\nexport const setCatIndex = (idx) => ({\n  type: SET_CAT_INDEX,\n  catIndex: idx\n});\n\nexport const updateClicks = (cat) => ({\n  type: UPDATE_CLICKS,\n  curCat: cat\n});\n\nexport const updateCat = (data) => ({\n  type: UPDATE_CAT,\n  data\n});","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { setCatIndex } from '../actions'\n\n// 猫的列表\nfunction List(props) {\n  return (\n    <ul className=\"list\">\n      {props.items && props.items.map((item, idx) => (\n        <li key={idx}\n          className={props.activeIdx === idx ? 'active' : ''}\n          onClick={() => props.dispatch(setCatIndex(idx))}\n        >{item.name}</li>\n      ))}\n    </ul>\n  )\n}\n\nList.propTypes = {\n  items: PropTypes.array,\n  activeIdx: PropTypes.number\n}\n\nexport default connect()(List);\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nfunction OutputInfo(props) {\n  let { cats, index, clicks } = props;\n\n  return (\n    <p>\n      共 {cats.length} 只猫咪，当前为第 {index + 1} 只，被点击了 {clicks} 次\n    </p>\n  )\n}\n\n// 获得了根级 store 的数据\nfunction mapStateToProps(state) {\n  return {\n    cats: state.cats,\n    index: state.catIndex,\n    clicks: state.cats[state.catIndex].clicks\n  }\n}\n\nOutputInfo.propTypes = {\n  cats: PropTypes.array,\n  index: PropTypes.number,\n  clicks: PropTypes.number\n}\n\nexport default connect(mapStateToProps)(OutputInfo);\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport OutputInfo from './output-info'\n\nfunction CatView(props) {\n  let { name, clicks, imgUrl } = props.cat;\n\n  return (\n    <div className=\"cat-view\">\n      <p>\n        {/* 猫的名称和点击数 */}\n        <strong>{name}</strong>{' '}\n        <span className=\"cat-clicks\">{clicks}</span> clicks\n      </p>\n\n      <img src={`images/${imgUrl}`} alt={name}\n        onClick={() => props.onCatClick()}\n      />\n\n      {/* 使用 redux 后无需传递根级数据给子组件，可在子组件内部直接获取 */}\n      <OutputInfo />\n    </div>\n  )\n}\n\nCatView.propTypes = {\n  cat: PropTypes.shape({\n    name: PropTypes.string,\n    clicks: PropTypes.number,\n    imgUrl: PropTypes.string\n  }),\n  onCatClick: PropTypes.func,\n}\n\nexport default CatView;\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nclass Form extends React.Component {\n  // 内部的状态，对主业务逻辑无影响\n  state = {\n    isFormShow: false,\n    fields: this.props.fields\n  }\n\n  // 生命周期：接收到新 props\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.fields !== this.state.fields) {\n      this.setState({fields: nextProps.fields})\n    }\n  }\n\n  // 切换表单可见\n  toggleForm() {\n    this.resetForm()\n    this.setState(state => (\n      {isFormShow: !state.isFormShow}\n    ))\n  }\n\n  // 表单项 value 变化\n  onFieldChange(el) {\n    let value = el.value;\n    let name = el.name;\n\n    if (name === 'clicks') {\n      value = parseInt(value, 10)\n    }\n\n    this.setState(state => {\n      let temp = {};\n\n      for (let key in state.fields) {\n        temp[key] = key === name ? value : state.fields[key]\n      }\n\n      return { fields: temp }\n    })\n  }\n\n  // 还原表单赋值\n  resetForm() {\n    this.setState({fields: this.props.fields})\n  }\n\n  // 取消\n  onCancel() {\n    this.resetForm()\n    this.setState({isFormShow: false})\n  }\n\n  // 保存\n  onSave() {\n    // 传递表单值（组件 state.fields 的值）\n    this.props.onSaveForm(this.state.fields)\n  }\n\n  render() {\n    let { name, clicks, imgUrl } = this.state.fields;\n\n    return (\n      <div>\n        <p>\n          <button\n            className=\"btn-admin\"\n            onClick={() => this.toggleForm()}\n          >Admin</button>\n        </p>\n        <div className=\"form\" style={\n            {display: this.state.isFormShow ? 'block' : 'none'}\n          }>\n          <p>\n            {/* 受控表单 */}\n            <label>Name:</label>\n            <input type=\"text\" name=\"name\"\n              value={name}\n              // 不加 onChange 的话，文本框是只读的\n              onChange={e => this.onFieldChange(e.target)}\n            />\n          </p>\n          <p>\n            <label>ImgURL:</label>\n            <input type=\"text\" name=\"imgUrl\"\n              value={`images/${imgUrl}`}\n              onChange={(e) => this.onFieldChange(e.target)}\n            />\n          </p>\n          <p>\n            <label>Clicks:</label>\n            <input type=\"text\" name=\"clicks\"\n              value={clicks}\n              onChange={(e) => this.onFieldChange(e.target)}\n            />\n          </p>\n          <p className=\"btn-group\">\n            <button onClick={() => this.onCancel()}>Cancel</button>{' '}\n            <button onClick={() => this.onSave()}>Save</button>\n          </p>\n        </div>\n      </div>\n    )\n  }\n}\n\nForm.propTypes = {\n  fields: PropTypes.shape({\n    name: PropTypes.string,\n    clicks: PropTypes.number,\n    imgUrl: PropTypes.string\n  }),\n  onSaveForm: PropTypes.func\n}\n\nexport default Form;\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { setCatIndex, updateClicks, updateCat } from './actions'\nimport List from './components/list'\nimport CatView from './components/cat-view'\nimport Form from './components/form'\n\nimport './App.css'\n\n// 定义根组件\nclass App extends React.Component {\n  // 获取当前的猫\n  getCurCat = () => this.props.cats[this.props.index];\n\n  // 视图渲染函数\n  render() {\n    return (\n      <div className=\"App\">\n        {/* 列表。子组件 dispatch 示例 */}\n        <List\n          items={this.props.cats}\n          activeIdx={this.props.index}\n        />\n\n        {/* 详情。孙级组件获取顶级 store 示例 */}\n        <CatView\n          cat={this.getCurCat()}\n          onCatClick={() => this.props.updateClicks(this.getCurCat())}\n        />\n\n        {/* 表单。父级 dispatch 示例 */}\n        <Form\n          fields={this.getCurCat()}\n          onSaveForm={(data) => this.props.updateCat(data)}\n        />\n      </div>\n    )\n  }\n}\n\n// 将数据映射到当前组件，可自定义字段名\nfunction mapStateToProps(state) {\n  return {\n    cats: state.cats,\n    index: state.catIndex\n  }\n}\n\n// 将 actions 映射到当前组件\n// 属性名会成为 prop 的 names，属性值是对应的 action 生成器函数\n// 它们和 `dispatch` 绑定\nconst mapDispatchToProps = {\n  setCatIndex,\n  updateClicks,\n  updateCat\n};\n\n// connect 是一个高阶函数（或称高阶组件 HOC）\n// 可以想象成一个管道，连接了顶级 store 和当前组件，使得当前组件可以获取 store 数据\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react'  // 解析、编译器\nimport ReactDOM from 'react-dom'  // 渲染到 DOM 的库\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport rootReducer from './reducers'\nimport App from './App'  // 根组件\nimport './index.css'  // 样式文件\n\nconst store = createStore(rootReducer);\n\n// 渲染到 DOM 中\n// Provider 组件包装整个应用，让应用树里的每一个组件都可以访问 store\n// store 会以 prop 形式传递（需要使用 connect 函数连接）\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}